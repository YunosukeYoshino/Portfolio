name: Deploy to Cloudflare Pages via API

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  repository_dispatch:
    types: [ repository_dispatch ]
permissions:
  contents: read

env:
  NODE_VERSION: '18'
  BUN_VERSION: 'latest'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy to Cloudflare Pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Build application
        run: bun run build
        env:
          MICROCMS_SERVICE_DOMAIN: ${{ secrets.MICROCMS_SERVICE_DOMAIN }}
          MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          SITE_URL: https://yunosuke-portfolio.pages.dev

      - name: Deploy to Cloudflare Pages via Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy out --project-name=yunosuke-portfolio --branch=main

      - name: Create deployment status
        if: success()
        run: |
          echo "üöÄ Deployment successful!"
          echo "üìÑ Site URL: https://yunosuke-portfolio.pages.dev"

      - name: API Deployment Alternative (Fallback)
        if: failure()
        run: |
          echo "‚ö†Ô∏è Wrangler deployment failed, trying API method..."

          # „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂ≠òÂú®Á¢∫Ë™ç
          PROJECT_CHECK=$(curl -s -X GET \
            "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/yunosuke-portfolio" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json")

          if echo "$PROJECT_CHECK" | grep -q '"success":false'; then
            echo "üìù Creating new project..."
            CREATE_RESPONSE=$(curl -s -X POST \
              "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects" \
              -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data '{
                "name": "yunosuke-portfolio",
                "production_branch": "main",
                "build_config": {
                  "build_command": "bun run build",
                  "destination_dir": "out",
                  "root_dir": ""
                }
              }')

            if echo "$CREATE_RESPONSE" | grep -q '"success":true'; then
              echo "‚úÖ Project created successfully"
            else
              echo "‚ùå Project creation failed"
              echo "$CREATE_RESPONSE"
              exit 1
            fi
          else
            echo "‚úÖ Project exists"
          fi

          echo "‚ÑπÔ∏è Manual file upload required via Cloudflare Dashboard"
          echo "üìÅ Build files are ready in ./out directory"
